[{"D:\\react-todo-remake\\src\\index.js":"1","D:\\react-todo-remake\\src\\reportWebVitals.js":"2","D:\\react-todo-remake\\src\\App.js":"3","D:\\react-todo-remake\\src\\components\\Form.js":"4","D:\\react-todo-remake\\src\\components\\TodoList.js":"5","D:\\react-todo-remake\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1703,"mtime":1611806478736,"results":"10","hashOfConfig":"8"},{"size":1128,"mtime":1611805243233,"results":"11","hashOfConfig":"8"},{"size":536,"mtime":1611804931359,"results":"12","hashOfConfig":"8"},{"size":914,"mtime":1611802740840,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mntb64",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"D:\\react-todo-remake\\src\\index.js",[],"D:\\react-todo-remake\\src\\reportWebVitals.js",[],"D:\\react-todo-remake\\src\\App.js",["28"],"import React,{useState,useEffect} from \"react\";\nimport './App.css';\n// importing Components\n\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n \n  const [inputText,setInputText] = useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n  \n useEffect(()=>{\n   getLocalTodos();\n },[]);\n \n  useEffect(()=>{\n    filterHandler();\n    saveLocalTodos();\n  },[todos ,status]);\n\n\n\n  const filterHandler = () =>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n\n        default:\n          setFilteredTodos(todos)\n          break;\n    }\n  };\n\n  const saveLocalTodos = () =>{\n      localStorage.setItem(\"todos\",JSON.stringify(todos));\n    \n  };\n\n  const getLocalTodos = () =>{\n    if(localStorage.getItem('todos')===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }\n    else{\n      // /localStorage.setItem(\"todos\",JSON.stringify(todos));\n     let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n     setTodos(todoLocal);\n    }\n  };\n\n\n\n\n\n  return (\n    <div className=\"App\">\n     <header>\n      <h1>Avi's Todo List</h1>\n     </header>\n     <Form  \n     inputText={inputText}\n     todos={todos} \n     setTodos={setTodos}   \n     setInputText={setInputText}\n     setStatus={setStatus}\n      />\n     <TodoList \n    filteredTodos={filteredTodos}\n    setTodos={setTodos} \n    todos={todos}/>\n     </div>\n      \n  );\n}\n\nexport default App;\n","D:\\react-todo-remake\\src\\components\\Form.js",[],"D:\\react-todo-remake\\src\\components\\TodoList.js",[],"D:\\react-todo-remake\\src\\components\\Todo.js",[],["29","30"],{"ruleId":"31","severity":1,"message":"32","line":23,"column":5,"nodeType":"33","endLine":23,"endColumn":20,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["39"],"no-native-reassign",["40"],"no-negated-in-lhs",["41"],{"desc":"42","fix":"43"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"44","text":"45"},[500,515],"[todos, status, filterHandler, saveLocalTodos]"]